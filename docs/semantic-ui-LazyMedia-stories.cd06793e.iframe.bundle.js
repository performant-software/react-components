"use strict";(self.webpackChunk_performant_software_storybook=self.webpackChunk_performant_software_storybook||[]).push([[8040],{"./src/semantic-ui/LazyMedia.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Audio:()=>Audio,Default:()=>Default,Document:()=>Document,Image:()=>Image,Uploadable:()=>Uploadable,__namedExportsOrder:()=>__namedExportsOrder,default:()=>LazyMedia_stories});var react=__webpack_require__("../../node_modules/react/index.js"),dist=__webpack_require__("../../node_modules/@storybook/addon-knobs/dist/index.js"),LazyMedia=__webpack_require__("../semantic-ui/src/components/LazyMedia.js"),SampleAudio=__webpack_require__("./src/assets/SampleAudio.mp3"),test_image=__webpack_require__("./src/assets/test-image.jpg");const sample2_namespaceObject=__webpack_require__.p+"static/media/sample2.2ca39cfa.pdf";var jsx_runtime=__webpack_require__("../../node_modules/react/jsx-runtime.js");function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(r,l){var t=null==r?null:"undefined"!=typeof Symbol&&r[Symbol.iterator]||r["@@iterator"];if(null!=t){var e,n,i,u,a=[],f=!0,o=!1;try{if(i=(t=t.call(r)).next,0===l){if(Object(t)!==t)return;f=!1}else for(;!(f=(e=i.call(t)).done)&&(a.push(e.value),a.length!==l);f=!0);}catch(r){o=!0,n=r}finally{try{if(!f&&null!=t.return&&(u=t.return(),Object(u)!==u))return}finally{if(o)throw n}}return a}}(arr,i)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}const LazyMedia_stories={title:"Components/Semantic UI/LazyMedia",decorators:[dist.withKnobs]};var Default=function Default(){return(0,jsx_runtime.jsx)(LazyMedia.Z,{})};Default.displayName="Default";var Audio=function Audio(){return(0,jsx_runtime.jsx)(LazyMedia.Z,{contentType:"audio/mp3",src:SampleAudio})};Audio.displayName="Audio";var Document=function Document(){return(0,jsx_runtime.jsx)(LazyMedia.Z,{contentType:"application/pdf",src:sample2_namespaceObject})};Document.displayName="Document";var Image=function Image(){return(0,jsx_runtime.jsx)(LazyMedia.Z,{contentType:"image/jpg",src:test_image})};Image.displayName="Image";var Uploadable=function Uploadable(){var _useState2=_slicedToArray((0,react.useState)(),2),file=_useState2[0],setFile=_useState2[1];return(0,jsx_runtime.jsx)(LazyMedia.Z,{contentType:file&&file.type,onUpload:function onUpload(f){return setFile(f)},src:file&&URL.createObjectURL(file)})};Uploadable.displayName="Uploadable",Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"() => <LazyMedia />",...Default.parameters?.docs?.source}}},Audio.parameters={...Audio.parameters,docs:{...Audio.parameters?.docs,source:{originalSource:"() => <LazyMedia contentType='audio/mp3' src={audio} />",...Audio.parameters?.docs?.source}}},Document.parameters={...Document.parameters,docs:{...Document.parameters?.docs,source:{originalSource:"() => <LazyMedia contentType='application/pdf' src={document} />",...Document.parameters?.docs?.source}}},Image.parameters={...Image.parameters,docs:{...Image.parameters?.docs,source:{originalSource:"() => <LazyMedia contentType='image/jpg' src={image} />",...Image.parameters?.docs?.source}}},Uploadable.parameters={...Uploadable.parameters,docs:{...Uploadable.parameters?.docs,source:{originalSource:"() => {\n  const [file, setFile] = useState();\n  return <LazyMedia contentType={file && file.type} onUpload={f => setFile(f)} src={file && URL.createObjectURL(file)} />;\n}",...Uploadable.parameters?.docs?.source}}};const __namedExportsOrder=["Default","Audio","Document","Image","Uploadable"]},"./src/assets/SampleAudio.mp3":(module,__unused_webpack_exports,__webpack_require__)=>{module.exports=__webpack_require__.p+"static/media/SampleAudio.8d14102f.mp3"}}]);