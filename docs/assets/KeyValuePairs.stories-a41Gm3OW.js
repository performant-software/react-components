import{r as o,j as t}from"./iframe-BPWyo1ml.js";import{G as a}from"./Grid-4l2-TXFZ.js";import{B as g}from"./Button-4UTl3zWh.js";import{I as v}from"./Input-CCAhbxsm.js";import{_ as u}from"./index-default-C0I3bBxV.js";import{i as m}from"./i18n-DkobdbHY.js";import"./extends-CCbyfPlC.js";import"./getElementType-_MvlUdE4.js";import"./inheritsLoose-1HkgTRWY.js";import"./setPrototypeOf-DgZC2w_0.js";import"./Icon-jme1Xn38.js";import"./Label-BoodK5V_.js";import"./ModernAutoControlledComponent-YfVkZAu6.js";import"./assertThisInitialized-B9jnkVVz.js";import"./includes-DPOpDRSZ.js";import"./toFinite-TVPM6KGA.js";import"./forEach-DkM9CNVk.js";import"./Dimmer-Cc_1Rffq.js";import"./Portal-CMKTsJj1.js";import"./keyboardKey-D0kxxHqZ.js";import"./map-PCFjh3mh.js";import"./i18next-eNuDfwAU.js";const C=n=>e=>{const r=o.useCallback(()=>{e.onChange([...e.items,{}])},[e.items]),h=o.useCallback(l=>{e.onChange(u.reject(e.items,(c,p)=>p===l))},[e.items]),f=o.useCallback((l,c,p,{value:x})=>{e.onChange(u.map(e.items,(y,w)=>w!==l?y:{...y,[c]:x}))},[e.items]);return t.jsx(n,{...e,onAddItem:r,onRemoveItem:h,onUpdateItem:f})},d=C(n=>t.jsxs("div",{children:[t.jsx(g,{basic:!0,content:m.t("Common.buttons.add"),icon:"plus",onClick:n.onAddItem.bind(void 0),type:"button"}),t.jsxs(a,{padded:"vertically",children:[u.map(n.items,(e,r)=>t.jsxs(a.Row,{columns:3,children:[t.jsx(a.Column,{width:8,children:t.jsx(v,{fluid:!0,onChange:n.onUpdateItem.bind(void 0,r,"key"),placeholder:m.t("KeyValuePairs.labels.key"),value:e.key})}),t.jsx(a.Column,{width:7,children:t.jsx(v,{fluid:!0,onChange:n.onUpdateItem.bind(void 0,r,"value"),placeholder:m.t("KeyValuePairs.labels.value"),value:e.value})}),t.jsx(a.Column,{width:1,children:t.jsx(g,{color:"red",icon:"trash",onClick:n.onRemoveItem.bind(void 0,r)})})]})),u.isEmpty(n.items)&&t.jsx(a.Row,{columns:1,children:t.jsx(a.Column,{children:m.t("Common.labels.noRecords")})})]})]}));d.__docgenInfo={description:"",methods:[],displayName:"KeyValuePairs",props:{onAddItem:{required:!0,flowType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:""},onRemoveItem:{required:!0,flowType:{name:"signature",type:"function",raw:"(index: number) => void",signature:{arguments:[{name:"index",type:{name:"number"}}],return:{name:"void"}}},description:""},onUpdateItem:{required:!0,flowType:{name:"signature",type:"function",raw:"(index: number, attribute: string, e: Event, data: any) => void",signature:{arguments:[{name:"index",type:{name:"number"}},{name:"attribute",type:{name:"string"}},{name:"e",type:{name:"Event"}},{name:"data",type:{name:"any"}}],return:{name:"void"}}},description:""},items:{required:!0,flowType:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  key: string,
  value: string
}`,signature:{properties:[{key:"key",value:{name:"string",required:!0}},{key:"value",value:{name:"string",required:!0}}]}}],raw:"Array<Item>"},description:""},onChange:{required:!0,flowType:{name:"signature",type:"function",raw:"(items: Array<Item>) => void",signature:{arguments:[{name:"items",type:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  key: string,
  value: string
}`,signature:{properties:[{key:"key",value:{name:"string",required:!0}},{key:"value",value:{name:"string",required:!0}}]}}],raw:"Array<Item>"}}],return:{name:"void"}}},description:""}}};const z={title:"Components/Semantic UI/KeyValuePairs",component:d},i=()=>{const[n,e]=o.useState("[]");return t.jsx(d,{items:JSON.parse(n),onChange:r=>e(JSON.stringify(r))})},s=()=>{const[n,e]=o.useState(JSON.stringify([{key:"One",value:"First record"},{key:"Two",value:"Second record"}]));return t.jsx(d,{items:JSON.parse(n),onChange:r=>e(JSON.stringify(r))})};i.__docgenInfo={description:"",methods:[],displayName:"Default"};s.__docgenInfo={description:"",methods:[],displayName:"withExistingValue"};i.parameters={...i.parameters,docs:{...i.parameters?.docs,source:{originalSource:`() => {
  const [value, setValue] = useState('[]');
  return <KeyValuePairs items={JSON.parse(value)} onChange={items => setValue(JSON.stringify(items))} />;
}`,...i.parameters?.docs?.source}}};s.parameters={...s.parameters,docs:{...s.parameters?.docs,source:{originalSource:`() => {
  const [value, setValue] = useState(JSON.stringify([{
    key: 'One',
    value: 'First record'
  }, {
    key: 'Two',
    value: 'Second record'
  }]));
  return <KeyValuePairs items={JSON.parse(value)} onChange={items => setValue(JSON.stringify(items))} />;
}`,...s.parameters?.docs?.source}}};const H=["Default","withExistingValue"];export{i as Default,H as __namedExportsOrder,z as default,s as withExistingValue};
