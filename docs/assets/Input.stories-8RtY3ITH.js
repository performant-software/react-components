import{j as t}from"./jsx-runtime-BTCK_S7S.js";import{r as c}from"./index-CBqU2yxZ.js";import{c as I}from"./clsx-B-dksMZM.js";import{I as u}from"./Icon-DJPCSIuN.js";import"./_commonjsHelpers-BosuxZz1.js";const v=e=>{const a=typeof e.clearable>"u"?!0:e.clearable;return t.jsxs("div",{className:I("flex","gap-4","items-center","justify-center","w-full","border","border-neutral-200","py-3","px-4","h-[40px]","rounded-[50px]","text-md","fill-neutral-800",e.className),children:[e.icon&&t.jsx(u,{name:e.icon,size:16}),t.jsx("input",{className:"grow bg-transparent",placeholder:e.placeholder,onChange:r=>e.onChange(r.target.value),type:"text",value:e.value||""}),a&&t.jsx("button",{className:"p-2 rounded-full flex items-center justify-center absolute right-4",onClick:()=>e.onChange(""),type:"button",children:t.jsx(u,{name:"close",size:16})})]})},l=v;v.__docgenInfo={description:"",methods:[],displayName:"Input",props:{className:{required:!1,flowType:{name:"string"},description:"(Optional) Extra styles for the input"},clearable:{required:!1,flowType:{name:"boolean"},description:`(Optional) Whether the user should be able to clear the input.
This causes an X button to appear on the righthand side of the input.`},placeholder:{required:!1,flowType:{name:"string"},description:"(Optional) Placeholder text to show when the user hasn't typed anything."},onChange:{required:!0,flowType:{name:"signature",type:"function",raw:"(value: string) => any",signature:{arguments:[{name:"value",type:{name:"string"}}],return:{name:"any"}}},description:`Callback function telling the component what to do when the user changes the value.
@param {string} value
@returns`},icon:{required:!1,flowType:{name:"string"},description:"(Optional) The name of the icon to show on the left side of the component."},value:{required:!0,flowType:{name:"string"},description:"The value of the field. If undefined, it will start as ''."}}};const j={title:"Components/Core Data/Input",component:l},n=()=>{const[e,a]=c.useState("");return t.jsx(l,{onChange:r=>a(r),placeholder:"Search",value:e})},s=()=>{const[e,a]=c.useState("");return t.jsx(l,{onChange:r=>a(r),icon:"search",placeholder:"Search",value:e})},o=()=>{const[e,a]=c.useState("");return t.jsx(l,{className:"bg-red-50 italic",onChange:r=>a(r),icon:"search",placeholder:"Search",value:e})};n.__docgenInfo={description:"",methods:[],displayName:"Default"};s.__docgenInfo={description:"",methods:[],displayName:"WithIcon"};o.__docgenInfo={description:"",methods:[],displayName:"CustomStyled"};var i,d,p;n.parameters={...n.parameters,docs:{...(i=n.parameters)==null?void 0:i.docs,source:{originalSource:`() => {
  const [query, setQuery] = useState('');
  return <Input onChange={val => setQuery(val)} placeholder='Search' value={query} />;
}`,...(p=(d=n.parameters)==null?void 0:d.docs)==null?void 0:p.source}}};var h,m,y;s.parameters={...s.parameters,docs:{...(h=s.parameters)==null?void 0:h.docs,source:{originalSource:`() => {
  const [query, setQuery] = useState('');
  return <Input onChange={val => setQuery(val)} icon='search' placeholder='Search' value={query} />;
}`,...(y=(m=s.parameters)==null?void 0:m.docs)==null?void 0:y.source}}};var f,g,x;o.parameters={...o.parameters,docs:{...(f=o.parameters)==null?void 0:f.docs,source:{originalSource:`() => {
  const [query, setQuery] = useState('');
  return <Input className='bg-red-50 italic' onChange={val => setQuery(val)} icon='search' placeholder='Search' value={query} />;
}`,...(x=(g=o.parameters)==null?void 0:g.docs)==null?void 0:x.source}}};const N=["Default","WithIcon","CustomStyled"];export{o as CustomStyled,n as Default,s as WithIcon,N as __namedExportsOrder,j as default};
