import{r as u,j as o}from"./iframe-CBVnS_gz.js";import"./index.es28-Dw5WpxTH.js";import{L as h}from"./index.es3-B5t9sEvB.js";import{M as i}from"./Message-B6D94I6f.js";import{B as r}from"./Button-7qBb4VYW.js";import{L as s}from"./Loader-BSaShB_1.js";import{D as f}from"./Dimmer-Dp0zIHSX.js";import{M as g}from"./Modal-HnkfqseB.js";import{T as a}from"./Toaster-CVWr8FiD.js";import{i as t}from"./i18n-DkobdbHY.js";const d=h(e=>{const m=e.component,[l,n]=u.useState(!1),c=!!(e.errors&&e.errors.length);return o.jsxs(m,{...e,children:[e.showLoading&&e.loading&&o.jsx(f,{active:e.loading,inverted:!0,children:o.jsx(s,{content:t.t("Common.messages.loading")})}),l&&c&&o.jsxs(a,{onDismiss:()=>n(!1),timeout:0,type:a.MessageTypes.negative,children:[o.jsx(i.Header,{content:t.t("Common.messages.error.header")}),o.jsx(i.List,{items:e.errors})]}),o.jsxs(g.Actions,{className:"edit-modal-actions",children:[o.jsxs(r,{disabled:e.saving,onClick:()=>(n(!0),e.onSave()),primary:!0,size:"medium",type:"submit",children:[t.t("Common.buttons.save"),e.saving&&o.jsx(s,{active:!0,className:"saving",inline:!0,size:"tiny"})]}),o.jsx(r,{basic:!0,disabled:e.saving,onClick:e.onClose.bind(void 0),size:"medium",type:"button",children:t.t("Common.buttons.cancel")})]})]})});d.defaultProps={showLoading:!0};d.__docgenInfo={description:`The <code>EditModal</code> component can be used to edit the details of a single record within a modal view. This
component uses the <code>EditContainer</code> higher-order component to facilitate all of the editing functionality.
This component is responsible for rendering the container in which the editable form is rendered.`,methods:[],displayName:"EditModal",props:{component:{required:!0,flowType:{name:"ComponentType",elements:[{name:"any"}],raw:"ComponentType<any>"},description:"The form component to render."},onClose:{required:!0,flowType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"Callback fired when the close button is clicked."},onSave:{required:!0,flowType:{name:"signature",type:"function",raw:"() => Promise<any>",signature:{arguments:[],return:{name:"Promise",elements:[{name:"any"}],raw:"Promise<any>"}}},description:"Callback fired when the save button is clicked."},showLoading:{required:!1,flowType:{name:"boolean"},description:"If <code>true</code>, a loading indicator will display.",defaultValue:{value:"true",computed:!1}}}};export{d as E};
