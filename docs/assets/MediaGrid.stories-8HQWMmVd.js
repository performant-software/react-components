import{j as i}from"./jsx-runtime-D9TvR9R2.js";import{r as p}from"./index-C0dDX-lL.js";import{a as k}from"./chunk-WFFRPTHA-B2vgThZf.js";import{d as C}from"./index-BdoI7aoa.js";import{I as _}from"./Label-BqnFaqey.js";import{L as w}from"./Loader-DQkWekFb.js";import{_ as s}from"./index-default-C_maRo4o.js";import{w as y}from"./Images-Dhz5NNjv.js";import"./_commonjsHelpers-BosuxZz1.js";import"./preview-errors-CzpZmerH.js";import"./index-CKJfshIT.js";import"./v4-D8aEg3BZ.js";import"./mapValues-LQZI9uWW.js";import"./pickBy-Us6u5-To.js";import"./_commonjs-dynamic-modules-TDtrdbi3.js";import"./isPlainObject-DCkRKKtx.js";import"./index-Cw1G72V2.js";import"./tiny-invariant.cjs-DxxScMW_.js";import"./___vite-browser-external_commonjs-proxy-DRaEfepn.js";import"./debounce-BkgZrIul.js";import"./extends-CCbyfPlC.js";import"./inheritsLoose-1HkgTRWY.js";import"./setPrototypeOf-DgZC2w_0.js";import"./ModernAutoControlledComponent-CBEnGjal.js";import"./assertThisInitialized-B9jnkVVz.js";import"./getElementType-C_4y_n4F.js";import"./Icon-BGzIEILD.js";import"./includes-BAV9TYTx.js";import"./toFinite-DWd2HYc9.js";import"./forEach-Bj9nU5MO.js";import"./Dimmer-kmE_IUk6.js";import"./Portal-CKYxdKwP.js";import"./keyboardKey-OMDgGVm3.js";import"./index-DOYXiIEK.js";import"./objectWithoutPropertiesLoose-1QL-frMM.js";import"./index-xJp9Kd2E.js";import"./Number-D3yuhZId.js";const x=5,a=e=>{const[n,h]=p.useState([]);return p.useEffect(()=>{const t=[];for(let r=0;r<e.items.length&&t.length<x;r+=1)s.isEmpty(e.items[r].image)||t.push(e.items[r]);h(t)},[e.items]),s.isEmpty(e.items)?null:i.jsxs("div",{className:"mediaGrid",children:[i.jsx(w,{active:e.loading}),i.jsx("div",{className:`grid${n.length}`,children:s.map(n,(t,r)=>i.jsx("div",{className:"mediaImage",children:i.jsx(_,{onClick:()=>e.onClick&&e.onClick(t),src:t.image,style:{cursor:e.onClick?"pointer":void 0,objectFit:"cover",width:"100%"}})},r))})]})};a.__docgenInfo={description:"",methods:[],displayName:"MediaGrid",props:{items:{required:!0,flowType:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  image: string
}`,signature:{properties:[{key:"image",value:{name:"string",required:!0}}]}}],raw:"Array<Item>"},description:""},loading:{required:!1,flowType:{name:"boolean"},description:""},onClick:{required:!1,flowType:{name:"signature",type:"function",raw:"(item: Item) => void",signature:{arguments:[{name:"item",type:{name:"signature",type:"object",raw:`{
  image: string
}`,signature:{properties:[{key:"image",value:{name:"string",required:!0}}]}}}],return:{name:"void"}}},description:""}}};const ae={title:"Components/Semantic UI/MediaGrid",decorators:[C.withKnobs]},I=20,o=y(e=>i.jsx(a,{items:e.images}),I),m=y(e=>i.jsx(a,{items:e.images,onClick:k("click image")}),I);o.__docgenInfo={description:"",methods:[],displayName:"Default"};m.__docgenInfo={description:"",methods:[],displayName:"OnClick"};var c,d,l;o.parameters={...o.parameters,docs:{...(c=o.parameters)==null?void 0:c.docs,source:{originalSource:"withImages(props => <MediaGrid items={props.images} />, IMAGE_COUNT)",...(l=(d=o.parameters)==null?void 0:d.docs)==null?void 0:l.source}}};var g,u,f;m.parameters={...m.parameters,docs:{...(g=m.parameters)==null?void 0:g.docs,source:{originalSource:"withImages(props => <MediaGrid items={props.images} onClick={action('click image')} />, IMAGE_COUNT)",...(f=(u=m.parameters)==null?void 0:u.docs)==null?void 0:f.source}}};const ne=["Default","OnClick"];export{o as Default,m as OnClick,ne as __namedExportsOrder,ae as default};
