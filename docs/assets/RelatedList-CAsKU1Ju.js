import{r as o,j as t}from"./iframe-vd5jUnmh.js";import{c as a}from"./clsx-B-dksMZM.js";import{_ as m}from"./index-default-B8-H6N8J.js";import{L as g}from"./LoadAnimation-CQ-ndU7B.js";import{a as h}from"./CoreData-CSVEoojG.js";const l=e=>{const[n,d]=o.useState([]),{data:s,loading:c,isNextDisabled:r,onNext:u,pages:p}=h(e.onLoad);return o.useEffect(()=>{if(s){const i=s[e.collectionName]||[];d(f=>[...f,...i])}},[s,e.collectionName]),c?t.jsx(g,{}):m.isEmpty(n)?t.jsx("div",{className:"pt-6 pl-3 pr-6 pb-8 flex items-center justify-center text-muted/60 italic",children:e.emptyMessage}):t.jsxs("div",{children:[t.jsx("ul",{className:a("grid","gap-2",{"grid-cols-1":e.itemsPerRow===1},{"grid-cols-2":e.itemsPerRow===2},{"grid-cols-3":e.itemsPerRow===3},{"grid-cols-4":e.itemsPerRow===4},{"grid-cols-5":e.itemsPerRow===5},{"grid-cols-6":e.itemsPerRow===6},e.className),children:m.map(n,i=>t.jsx("li",{className:"flex items-center",children:e.renderItem(i)},i.id))}),p>1&&!r&&t.jsx("button",{className:a("py-2","px-3","mt-2",{"disable:pointer-events-none":r}),disabled:r,onClick:u,type:"button",children:e.moreLabel})]})};l.defaultProps={itemsPerRow:1};l.__docgenInfo={description:"This component is a helper component used to structure the lists for the other `Related*` components.",methods:[],displayName:"RelatedList",props:{className:{required:!1,flowType:{name:"string"},description:"Name of the class(es) to apply to the <ul> element."},collectionName:{required:!0,flowType:{name:"string"},description:"Name of the collection that stores the items to display."},itemsPerRow:{required:!1,flowType:{name:"number"},description:"Number of items to display in each row of the grid.",defaultValue:{value:"1",computed:!1}},onLoad:{required:!0,flowType:{name:"signature",type:"function",raw:"() => any",signature:{arguments:[],return:{name:"any"}}},description:"Callback fired when the component is mounted to fetch the data."},emptyMessage:{required:!0,flowType:{name:"string"},description:"A message to display when the list is empty."},moreLabel:{required:!0,flowType:{name:"string"},description:'The label to display on the "Show More" button.'},renderItem:{required:!0,flowType:{name:"signature",type:"function",raw:"(item: Item) => JSX.Element",signature:{arguments:[{name:"item",type:{name:"signature",type:"object",raw:`{
  id: string
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}}]}}}],return:{name:"JSX.Element"}}},description:"Render function used to determine how to present the passed item."}}};export{l as R};
