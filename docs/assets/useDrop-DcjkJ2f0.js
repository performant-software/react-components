import{i as c,D as M}from"./index-__O0XiL7.js";import{g as b,r as s}from"./iframe-CBVnS_gz.js";var f,v;function R(){return v||(v=1,f=function r(e,t){if(e===t)return!0;if(e&&t&&typeof e=="object"&&typeof t=="object"){if(e.constructor!==t.constructor)return!1;var n,i,o;if(Array.isArray(e)){if(n=e.length,n!=t.length)return!1;for(i=n;i--!==0;)if(!r(e[i],t[i]))return!1;return!0}if(e.constructor===RegExp)return e.source===t.source&&e.flags===t.flags;if(e.valueOf!==Object.prototype.valueOf)return e.valueOf()===t.valueOf();if(e.toString!==Object.prototype.toString)return e.toString()===t.toString();if(o=Object.keys(e),n=o.length,n!==Object.keys(t).length)return!1;for(i=n;i--!==0;)if(!Object.prototype.hasOwnProperty.call(t,o[i]))return!1;for(i=n;i--!==0;){var a=o[i];if(!r(e[a],t[a]))return!1}return!0}return e!==e&&t!==t}),f}var H=R();const E=b(H),l=typeof window<"u"?s.useLayoutEffect:s.useEffect;function k(r,e,t){const[n,i]=s.useState(()=>e(r)),o=s.useCallback(()=>{const a=e(r);E(n,a)||(i(a),t&&t())},[n,r,t]);return l(o),[n,o]}function x(r,e,t){const[n,i]=k(r,e,t);return l(function(){const a=r.getHandlerId();if(a!=null)return r.subscribeToStateChange(i,{handlerIds:[a]})},[r,i]),n}function S(r,e,t){return x(e,r||(()=>({})),()=>t.reconnect())}function T(r,e){const t=[];return typeof r!="function"&&t.push(r),s.useMemo(()=>typeof r=="function"?r():r,t)}function N(r){return s.useMemo(()=>r.hooks.dragSource(),[r])}function q(r){return s.useMemo(()=>r.hooks.dragPreview(),[r])}let p=!1,D=!1;class j{receiveHandlerId(e){this.sourceId=e}getHandlerId(){return this.sourceId}canDrag(){c(!p,"You may not call monitor.canDrag() inside your canDrag() implementation. Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source-monitor");try{return p=!0,this.internalMonitor.canDragSource(this.sourceId)}finally{p=!1}}isDragging(){if(!this.sourceId)return!1;c(!D,"You may not call monitor.isDragging() inside your isDragging() implementation. Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source-monitor");try{return D=!0,this.internalMonitor.isDraggingSource(this.sourceId)}finally{D=!1}}subscribeToStateChange(e,t){return this.internalMonitor.subscribeToStateChange(e,t)}isDraggingSource(e){return this.internalMonitor.isDraggingSource(e)}isOverTarget(e,t){return this.internalMonitor.isOverTarget(e,t)}getTargetIds(){return this.internalMonitor.getTargetIds()}isSourcePublic(){return this.internalMonitor.isSourcePublic()}getSourceId(){return this.internalMonitor.getSourceId()}subscribeToOffsetChange(e){return this.internalMonitor.subscribeToOffsetChange(e)}canDragSource(e){return this.internalMonitor.canDragSource(e)}canDropOnTarget(e){return this.internalMonitor.canDropOnTarget(e)}getItemType(){return this.internalMonitor.getItemType()}getItem(){return this.internalMonitor.getItem()}getDropResult(){return this.internalMonitor.getDropResult()}didDrop(){return this.internalMonitor.didDrop()}getInitialClientOffset(){return this.internalMonitor.getInitialClientOffset()}getInitialSourceClientOffset(){return this.internalMonitor.getInitialSourceClientOffset()}getSourceClientOffset(){return this.internalMonitor.getSourceClientOffset()}getClientOffset(){return this.internalMonitor.getClientOffset()}getDifferenceFromInitialOffset(){return this.internalMonitor.getDifferenceFromInitialOffset()}constructor(e){this.sourceId=null,this.internalMonitor=e.getMonitor()}}let C=!1;class F{receiveHandlerId(e){this.targetId=e}getHandlerId(){return this.targetId}subscribeToStateChange(e,t){return this.internalMonitor.subscribeToStateChange(e,t)}canDrop(){if(!this.targetId)return!1;c(!C,"You may not call monitor.canDrop() inside your canDrop() implementation. Read more: http://react-dnd.github.io/react-dnd/docs/api/drop-target-monitor");try{return C=!0,this.internalMonitor.canDropOnTarget(this.targetId)}finally{C=!1}}isOver(e){return this.targetId?this.internalMonitor.isOverTarget(this.targetId,e):!1}getItemType(){return this.internalMonitor.getItemType()}getItem(){return this.internalMonitor.getItem()}getDropResult(){return this.internalMonitor.getDropResult()}didDrop(){return this.internalMonitor.didDrop()}getInitialClientOffset(){return this.internalMonitor.getInitialClientOffset()}getInitialSourceClientOffset(){return this.internalMonitor.getInitialSourceClientOffset()}getSourceClientOffset(){return this.internalMonitor.getSourceClientOffset()}getClientOffset(){return this.internalMonitor.getClientOffset()}getDifferenceFromInitialOffset(){return this.internalMonitor.getDifferenceFromInitialOffset()}constructor(e){this.targetId=null,this.internalMonitor=e.getMonitor()}}function U(r,e,t){const n=t.getRegistry(),i=n.addTarget(r,e);return[i,()=>n.removeTarget(i)]}function Y(r,e,t){const n=t.getRegistry(),i=n.addSource(r,e);return[i,()=>n.removeSource(i)]}function I(r,e,t,n){let i;if(i!==void 0)return!!i;if(r===e)return!0;if(typeof r!="object"||!r||typeof e!="object"||!e)return!1;const o=Object.keys(r),a=Object.keys(e);if(o.length!==a.length)return!1;const u=Object.prototype.hasOwnProperty.bind(e);for(let d=0;d<o.length;d++){const h=o[d];if(!u(h))return!1;const y=r[h],P=e[h];if(i=void 0,i===!1||i===void 0&&y!==P)return!1}return!0}function m(r){return r!==null&&typeof r=="object"&&Object.prototype.hasOwnProperty.call(r,"current")}function A(r){if(typeof r.type=="string")return;const e=r.type.displayName||r.type.name||"the component";throw new Error(`Only native element nodes can now be passed to React DnD connectors.You can either wrap ${e} into a <div>, or turn it into a drag source or a drop target itself.`)}function L(r){return(e=null,t=null)=>{if(!s.isValidElement(e)){const o=e;return r(o,t),o}const n=e;return A(n),V(n,t?o=>r(o,t):r)}}function w(r){const e={};return Object.keys(r).forEach(t=>{const n=r[t];if(t.endsWith("Ref"))e[t]=r[t];else{const i=L(n);e[t]=()=>i}}),e}function O(r,e){typeof r=="function"?r(e):r.current=e}function V(r,e){const t=r.ref;return c(typeof t!="string","Cannot connect React DnD to an element with an existing string ref. Please convert it to use a callback ref instead, or wrap it into a <span> or <div>. Read more: https://reactjs.org/docs/refs-and-the-dom.html#callback-refs"),t?s.cloneElement(r,{ref:n=>{O(t,n),O(e,n)}}):s.cloneElement(r,{ref:e})}class W{receiveHandlerId(e){this.handlerId!==e&&(this.handlerId=e,this.reconnect())}get connectTarget(){return this.dragSource}get dragSourceOptions(){return this.dragSourceOptionsInternal}set dragSourceOptions(e){this.dragSourceOptionsInternal=e}get dragPreviewOptions(){return this.dragPreviewOptionsInternal}set dragPreviewOptions(e){this.dragPreviewOptionsInternal=e}reconnect(){const e=this.reconnectDragSource();this.reconnectDragPreview(e)}reconnectDragSource(){const e=this.dragSource,t=this.didHandlerIdChange()||this.didConnectedDragSourceChange()||this.didDragSourceOptionsChange();return t&&this.disconnectDragSource(),this.handlerId?e?(t&&(this.lastConnectedHandlerId=this.handlerId,this.lastConnectedDragSource=e,this.lastConnectedDragSourceOptions=this.dragSourceOptions,this.dragSourceUnsubscribe=this.backend.connectDragSource(this.handlerId,e,this.dragSourceOptions)),t):(this.lastConnectedDragSource=e,t):t}reconnectDragPreview(e=!1){const t=this.dragPreview,n=e||this.didHandlerIdChange()||this.didConnectedDragPreviewChange()||this.didDragPreviewOptionsChange();if(n&&this.disconnectDragPreview(),!!this.handlerId){if(!t){this.lastConnectedDragPreview=t;return}n&&(this.lastConnectedHandlerId=this.handlerId,this.lastConnectedDragPreview=t,this.lastConnectedDragPreviewOptions=this.dragPreviewOptions,this.dragPreviewUnsubscribe=this.backend.connectDragPreview(this.handlerId,t,this.dragPreviewOptions))}}didHandlerIdChange(){return this.lastConnectedHandlerId!==this.handlerId}didConnectedDragSourceChange(){return this.lastConnectedDragSource!==this.dragSource}didConnectedDragPreviewChange(){return this.lastConnectedDragPreview!==this.dragPreview}didDragSourceOptionsChange(){return!I(this.lastConnectedDragSourceOptions,this.dragSourceOptions)}didDragPreviewOptionsChange(){return!I(this.lastConnectedDragPreviewOptions,this.dragPreviewOptions)}disconnectDragSource(){this.dragSourceUnsubscribe&&(this.dragSourceUnsubscribe(),this.dragSourceUnsubscribe=void 0)}disconnectDragPreview(){this.dragPreviewUnsubscribe&&(this.dragPreviewUnsubscribe(),this.dragPreviewUnsubscribe=void 0,this.dragPreviewNode=null,this.dragPreviewRef=null)}get dragSource(){return this.dragSourceNode||this.dragSourceRef&&this.dragSourceRef.current}get dragPreview(){return this.dragPreviewNode||this.dragPreviewRef&&this.dragPreviewRef.current}clearDragSource(){this.dragSourceNode=null,this.dragSourceRef=null}clearDragPreview(){this.dragPreviewNode=null,this.dragPreviewRef=null}constructor(e){this.hooks=w({dragSource:(t,n)=>{this.clearDragSource(),this.dragSourceOptions=n||null,m(t)?this.dragSourceRef=t:this.dragSourceNode=t,this.reconnectDragSource()},dragPreview:(t,n)=>{this.clearDragPreview(),this.dragPreviewOptions=n||null,m(t)?this.dragPreviewRef=t:this.dragPreviewNode=t,this.reconnectDragPreview()}}),this.handlerId=null,this.dragSourceRef=null,this.dragSourceOptionsInternal=null,this.dragPreviewRef=null,this.dragPreviewOptionsInternal=null,this.lastConnectedHandlerId=null,this.lastConnectedDragSource=null,this.lastConnectedDragSourceOptions=null,this.lastConnectedDragPreview=null,this.lastConnectedDragPreviewOptions=null,this.backend=e}}class z{get connectTarget(){return this.dropTarget}reconnect(){const e=this.didHandlerIdChange()||this.didDropTargetChange()||this.didOptionsChange();e&&this.disconnectDropTarget();const t=this.dropTarget;if(this.handlerId){if(!t){this.lastConnectedDropTarget=t;return}e&&(this.lastConnectedHandlerId=this.handlerId,this.lastConnectedDropTarget=t,this.lastConnectedDropTargetOptions=this.dropTargetOptions,this.unsubscribeDropTarget=this.backend.connectDropTarget(this.handlerId,t,this.dropTargetOptions))}}receiveHandlerId(e){e!==this.handlerId&&(this.handlerId=e,this.reconnect())}get dropTargetOptions(){return this.dropTargetOptionsInternal}set dropTargetOptions(e){this.dropTargetOptionsInternal=e}didHandlerIdChange(){return this.lastConnectedHandlerId!==this.handlerId}didDropTargetChange(){return this.lastConnectedDropTarget!==this.dropTarget}didOptionsChange(){return!I(this.lastConnectedDropTargetOptions,this.dropTargetOptions)}disconnectDropTarget(){this.unsubscribeDropTarget&&(this.unsubscribeDropTarget(),this.unsubscribeDropTarget=void 0)}get dropTarget(){return this.dropTargetNode||this.dropTargetRef&&this.dropTargetRef.current}clearDropTarget(){this.dropTargetRef=null,this.dropTargetNode=null}constructor(e){this.hooks=w({dropTarget:(t,n)=>{this.clearDropTarget(),this.dropTargetOptions=n,m(t)?this.dropTargetRef=t:this.dropTargetNode=t,this.reconnect()}}),this.handlerId=null,this.dropTargetRef=null,this.dropTargetOptionsInternal=null,this.lastConnectedHandlerId=null,this.lastConnectedDropTarget=null,this.lastConnectedDropTargetOptions=null,this.backend=e}}function g(){const{dragDropManager:r}=s.useContext(M);return c(r!=null,"Expected drag drop context"),r}function $(r,e){const t=g(),n=s.useMemo(()=>new W(t.getBackend()),[t]);return l(()=>(n.dragSourceOptions=r||null,n.reconnect(),()=>n.disconnectDragSource()),[n,r]),l(()=>(n.dragPreviewOptions=e||null,n.reconnect(),()=>n.disconnectDragPreview()),[n,e]),n}function G(){const r=g();return s.useMemo(()=>new j(r),[r])}class J{beginDrag(){const e=this.spec,t=this.monitor;let n=null;return typeof e.item=="object"?n=e.item:typeof e.item=="function"?n=e.item(t):n={},n??null}canDrag(){const e=this.spec,t=this.monitor;return typeof e.canDrag=="boolean"?e.canDrag:typeof e.canDrag=="function"?e.canDrag(t):!0}isDragging(e,t){const n=this.spec,i=this.monitor,{isDragging:o}=n;return o?o(i):t===e.getSourceId()}endDrag(){const e=this.spec,t=this.monitor,n=this.connector,{end:i}=e;i&&i(t.getItem(),t),n.reconnect()}constructor(e,t,n){this.spec=e,this.monitor=t,this.connector=n}}function K(r,e,t){const n=s.useMemo(()=>new J(r,e,t),[e,t]);return s.useEffect(()=>{n.spec=r},[r]),n}function Q(r){return s.useMemo(()=>{const e=r.type;return c(e!=null,"spec.type must be defined"),e},[r])}function X(r,e,t){const n=g(),i=K(r,e,t),o=Q(r);l(function(){if(o!=null){const[u,d]=Y(o,i,n);return e.receiveHandlerId(u),t.receiveHandlerId(u),d}},[n,e,t,i,o])}function se(r,e){const t=T(r);c(!t.begin,"useDrag::spec.begin was deprecated in v14. Replace spec.begin() with spec.item(). (see more here - https://react-dnd.github.io/react-dnd/docs/api/use-drag)");const n=G(),i=$(t.options,t.previewOptions);return X(t,n,i),[S(t.collect,n,i),N(i),q(i)]}function Z(r){return s.useMemo(()=>r.hooks.dropTarget(),[r])}function _(r){const e=g(),t=s.useMemo(()=>new z(e.getBackend()),[e]);return l(()=>(t.dropTargetOptions=r||null,t.reconnect(),()=>t.disconnectDropTarget()),[r]),t}function B(){const r=g();return s.useMemo(()=>new F(r),[r])}function ee(r){const{accept:e}=r;return s.useMemo(()=>(c(r.accept!=null,"accept must be defined"),Array.isArray(e)?e:[e]),[e])}class te{canDrop(){const e=this.spec,t=this.monitor;return e.canDrop?e.canDrop(t.getItem(),t):!0}hover(){const e=this.spec,t=this.monitor;e.hover&&e.hover(t.getItem(),t)}drop(){const e=this.spec,t=this.monitor;if(e.drop)return e.drop(t.getItem(),t)}constructor(e,t){this.spec=e,this.monitor=t}}function re(r,e){const t=s.useMemo(()=>new te(r,e),[e]);return s.useEffect(()=>{t.spec=r},[r]),t}function ne(r,e,t){const n=g(),i=re(r,e),o=ee(r);l(function(){const[u,d]=U(o,i,n);return e.receiveHandlerId(u),t.receiveHandlerId(u),d},[n,e,i,t,o.map(a=>a.toString()).join("|")])}function ae(r,e){const t=T(r),n=B(),i=_(t.options);return ne(t,n,i),[S(t.collect,n,i),Z(i)]}export{se as a,ae as u};
