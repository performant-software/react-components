import{j as n,r as i}from"./iframe-D2tDQHIu.js";import{P as x}from"./Pagination-DXFy5u_P.js";import{H as v}from"./Header-CBddMSBf.js";import{I as E}from"./Label-CmMRyCgB.js";import{L as I}from"./Loader-ENK_7K4O.js";import{S as w}from"./Segment-BKr5EDyc.js";import{D as d}from"./Dimmer-Wnz_k9oJ.js";import{T as P}from"./Transition-C6XMim_5.js";import{_ as C}from"./index-default-C0I3bBxV.js";import{w as p}from"./Images-DMSooBqH.js";import"./extends-CCbyfPlC.js";import"./inheritsLoose-1HkgTRWY.js";import"./setPrototypeOf-DgZC2w_0.js";import"./map-q00LD5yS.js";import"./getElementType-TLbMidFA.js";import"./ModernAutoControlledComponent-CIi-16Zs.js";import"./assertThisInitialized-B9jnkVVz.js";import"./_isIterateeCall-B_DSrIuf.js";import"./toFinite-Ch3-mxAi.js";import"./Menu-BuaZ_Fim.js";import"./_arrayReduce-CrxnWFSq.js";import"./deburr-ChK6Lkvo.js";import"./Icon-BSWzGvLf.js";import"./keyboardKey-UPAJnvsN.js";import"./includes-ComNSsGh.js";import"./forEach-xROvcHNC.js";import"./Portal-BF3g11_x.js";import"./_baseAssignValue-CihLrf3R.js";import"./filter-DnFvB4UZ.js";import"./index-DIguL7K7.js";import"./index-default-B8-H6N8J.js";import"./Number-D3yuhZId.js";const _=e=>{const a={},r=[];for(let t=0;t<e.columns;t+=1)a[`column${t}`]=[];for(let t=0;t<e.children.length;t+=1){const s=t%e.columns;a[`column${s}`].push(n.jsx("div",{className:"itemContainer",style:{marginBottom:`${e.gap}px`},children:e.children[t]},t))}for(let t=0;t<e.columns;t+=1)r.push(n.jsx("div",{className:"column",style:{marginLeft:`${t>0?e.gap:0}px`},children:a[`column${t}`]},t));return n.jsx("div",{className:"masonryGrid",children:r})},b=350,j=175,k=e=>{const[a,r]=i.useState(!1),[t,s]=i.useState(0);return i.useEffect(()=>{s(j+Math.ceil(Math.random()*b))},[]),n.jsxs(d.Dimmable,{className:"item",dimmed:a,onClick:()=>e.onClick&&e.onClick(e.item),onMouseEnter:()=>r(!0),onMouseLeave:()=>r(!1),style:{cursor:e.onClick?"pointer":void 0,height:`${t}px`},children:[n.jsx(P,{duration:800,visible:a,children:n.jsxs(d.Inner,{active:a,children:[n.jsx(v,{content:e.item.title,inverted:!0,subheader:e.item.subtitle}),e.item.extra&&n.jsx("div",{className:"extraContainer",children:e.item.extra})]})}),n.jsx(E,{alt:e.item.alt,className:"image",src:e.item.image}),e.renderContent&&e.renderContent(e.item)]})},c=e=>n.jsxs("div",{className:"masonry-grid",children:[n.jsx(I,{active:e.loading}),n.jsxs("div",{children:[n.jsx(_,{columns:e.columns,gap:e.gap,children:C.map(e.items,(a,r)=>n.jsx(k,{item:a,onClick:e.onClick,renderContent:e.renderContent},r))}),e.pages>1&&e.onPageChange&&n.jsx(w,{basic:!0,textAlign:"center",children:n.jsx(x,{activePage:e.page,firstItem:null,lastItem:null,onPageChange:(a,{activePage:r})=>e.onPageChange&&e.onPageChange(r),totalPages:e.pages,size:"small"})})]}),!e.loading&&!(e.items&&e.items.length)&&e.renderEmpty&&e.renderEmpty()]});c.__docgenInfo={description:"",methods:[],displayName:"MasonryGrid",props:{columns:{required:!0,flowType:{name:"number"},description:""},gap:{required:!0,flowType:{name:"number"},description:""},items:{required:!0,flowType:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  alt: string,
  extra?: Element<any> | string,
  id: number,
  image: string,
  subtitle?: string,
  title?: string,
}`,signature:{properties:[{key:"alt",value:{name:"string",required:!0}},{key:"extra",value:{name:"union",raw:"Element<any> | string",elements:[{name:"Element",elements:[{name:"any"}],raw:"Element<any>"},{name:"string"}],required:!1}},{key:"id",value:{name:"number",required:!0}},{key:"image",value:{name:"string",required:!0}},{key:"subtitle",value:{name:"string",required:!1}},{key:"title",value:{name:"string",required:!1}}]}}],raw:"Array<Item>"},description:""},loading:{required:!1,flowType:{name:"boolean"},description:""},onClick:{required:!1,flowType:{name:"signature",type:"function",raw:"(item: any) => void",signature:{arguments:[{name:"item",type:{name:"any"}}],return:{name:"void"}}},description:""},onPageChange:{required:!1,flowType:{name:"signature",type:"function",raw:"(page: number) => void",signature:{arguments:[{name:"page",type:{name:"number"}}],return:{name:"void"}}},description:""},page:{required:!0,flowType:{name:"number"},description:""},pages:{required:!0,flowType:{name:"number"},description:""},renderContent:{required:!1,flowType:{name:"signature",type:"function",raw:"(item: Item) => Node",signature:{arguments:[{name:"item",type:{name:"signature",type:"object",raw:`{
  alt: string,
  extra?: Element<any> | string,
  id: number,
  image: string,
  subtitle?: string,
  title?: string,
}`,signature:{properties:[{key:"alt",value:{name:"string",required:!0}},{key:"extra",value:{name:"union",raw:"Element<any> | string",elements:[{name:"Element",elements:[{name:"any"}],raw:"Element<any>"},{name:"string"}],required:!1}},{key:"id",value:{name:"number",required:!0}},{key:"image",value:{name:"string",required:!0}},{key:"subtitle",value:{name:"string",required:!1}},{key:"title",value:{name:"string",required:!1}}]}}}],return:{name:"Node"}}},description:""},renderEmpty:{required:!1,flowType:{name:"signature",type:"function",raw:"() => Node",signature:{arguments:[],return:{name:"Node"}}},description:""}}};const{action:T}=__STORYBOOK_MODULE_ACTIONS__,oe={title:"Components/Semantic UI/MasonryGrid",component:c},y=50,m=p(e=>n.jsx(c,{columns:3,gap:20,items:e.images,onClick:T("click"),page:1,pages:1}),y),o=()=>n.jsx(c,{columns:3,gap:20,items:[],loading:!0,page:1,pages:1}),l=p(e=>{const[a,r]=i.useState(1),[t,s]=i.useState([]),u=20,f=i.useMemo(()=>Math.ceil(e.images.length/u),[t.length]);return i.useEffect(()=>{const g=(a-1)*u+1,h=a*u;s(e.images.slice(g,h))},[a]),n.jsx(c,{columns:3,gap:20,items:t,onPageChange:g=>{r(g),window.scrollTo({top:0,behavior:"smooth"})},page:a,pages:f})},y);m.__docgenInfo={description:"",methods:[],displayName:"Default"};o.__docgenInfo={description:"",methods:[],displayName:"Loading"};l.__docgenInfo={description:"",methods:[],displayName:"Pagination"};m.parameters={...m.parameters,docs:{...m.parameters?.docs,source:{originalSource:"withImages(props => <MasonryGrid columns={3} gap={20} items={props.images} onClick={action('click')} page={1} pages={1} />, IMAGE_COUNT)",...m.parameters?.docs?.source}}};o.parameters={...o.parameters,docs:{...o.parameters?.docs,source:{originalSource:"() => <MasonryGrid columns={3} gap={20} items={[]} loading page={1} pages={1} />",...o.parameters?.docs?.source}}};l.parameters={...l.parameters,docs:{...l.parameters?.docs,source:{originalSource:`withImages(props => {
  const [page, setPage] = useState(1);
  const [items, setItems] = useState([]);
  const PER_PAGE = 20;
  const pages = useMemo(() => Math.ceil(props.images.length / PER_PAGE), [items.length]);
  useEffect(() => {
    const startIndex = (page - 1) * PER_PAGE + 1;
    const endIndex = page * PER_PAGE;
    setItems(props.images.slice(startIndex, endIndex));
  }, [page]);
  return <MasonryGrid columns={3} gap={20} items={items} onPageChange={activePage => {
    setPage(activePage);
    window.scrollTo({
      top: 0,
      behavior: 'smooth'
    });
  }} page={page} pages={pages} />;
}, IMAGE_COUNT)`,...l.parameters?.docs?.source}}};const le=["Default","Loading","Pagination"];export{m as Default,o as Loading,l as Pagination,le as __namedExportsOrder,oe as default};
