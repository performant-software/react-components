import{R as b,r as f,j as c}from"./iframe-CBVnS_gz.js";import{_ as p}from"./extends-CCbyfPlC.js";import{c as T,g as N,a as E,f as j,i as w,l as _,m as P,b as S}from"./getElementType-Bjb0ertt.js";import{I}from"./Icon-BZ3eAMfw.js";import{_ as D}from"./inheritsLoose-1HkgTRWY.js";import{f as R}from"./forEach-Bzy9_EBR.js";import{_ as $}from"./index-default-C0I3bBxV.js";import{L as U}from"./Loader-BSaShB_1.js";import"./setPrototypeOf-DgZC2w_0.js";function h(e){var i=e.children,o=e.className,r=e.content,n=e.icon,a=T("divider",o),t=N(h,e),s=E(h,e);return j(n)?j(r)?b.createElement(s,p({},t,{className:a}),w(i)?"/":i):b.createElement(s,p({},t,{className:a}),r):I.create(n,{defaultProps:p({},t,{className:a}),autoGenerateKey:!1})}h.handledProps=["as","children","className","content","icon"];h.propTypes={};h.create=_(h,function(e){return{icon:e}});var y=function(e){D(i,e);function i(){for(var r,n=arguments.length,a=new Array(n),t=0;t<n;t++)a[t]=arguments[t];return r=e.call.apply(e,[this].concat(a))||this,r.computeElementType=function(){var s=r.props,m=s.link,d=s.onClick;if(m||d)return"a"},r.handleClick=function(s){return P(r.props,"onClick",s,r.props)},r}var o=i.prototype;return o.render=function(){var n=this.props,a=n.active,t=n.children,s=n.className,m=n.content,d=n.href,u=T(S(a,"active"),"section",s),g=N(i,this.props),k=E(i,this.props,this.computeElementType);return b.createElement(k,p({},g,{className:u,href:d,onClick:this.handleClick}),w(t)?m:t)},i}(f.Component);y.handledProps=["active","as","children","className","content","href","link","onClick"];y.propTypes={};y.create=_(y,function(e){return{content:e,link:!0}});function l(e){var i=e.children,o=e.className,r=e.divider,n=e.icon,a=e.sections,t=e.size,s=T("ui",t,"breadcrumb",o),m=N(l,e),d=E(l,e);if(!w(i))return b.createElement(d,p({},m,{className:s}),i);var u=[];return R(a,function(g,k){var L=y.create(g);if(u.push(L),k!==a.length-1){var B=L.key+"_divider"||JSON.stringify(g);u.push(h.create({content:r,icon:n,key:B}))}}),b.createElement(d,p({},m,{className:s}),u)}l.handledProps=["as","children","className","divider","icon","sections","size"];l.propTypes={};l.Divider=h;l.Section=y;const q=e=>{const[i,o]=f.useState(!1),[r,n]=f.useState(null);return f.useEffect(()=>{e.id?(e.onLoad(e.id,e.name).then(a=>n(a)).finally(()=>o(!1)),o(!0)):n(null)},[e.id,e.name]),c.jsxs(c.Fragment,{children:[c.jsx(l.Section,{active:e.active&&!e.id,as:e.as,to:`/${e.url}`,children:e.label}),e.id&&c.jsx(l.Divider,{icon:"right chevron"}),i&&c.jsx(U,{active:!0,inline:!0}),r&&e.id&&c.jsx(l.Section,{active:e.active,as:e.as,to:`/${e.url}/${e.id}`,children:r})]})};q.__docgenInfo={description:"",methods:[],displayName:"BreadcrumbItem",props:{active:{required:!0,flowType:{name:"boolean"},description:""},as:{required:!1,flowType:{name:"ComponentType",elements:[{name:"any"}],raw:"ComponentType<any>"},description:""},id:{required:!1,flowType:{name:"number"},description:""},label:{required:!1,flowType:{name:"string"},description:""},name:{required:!0,flowType:{name:"string"},description:""},onLoad:{required:!0,flowType:{name:"signature",type:"function",raw:"(id: number, name: string) => Promise<any>",signature:{arguments:[{name:"id",type:{name:"number"}},{name:"name",type:{name:"string"}}],return:{name:"Promise",elements:[{name:"any"}],raw:"Promise<any>"}}},description:""},url:{required:!0,flowType:{name:"string"},description:""}}};const C="/",x=e=>{const i=f.useCallback(n=>/^\d+$/.test(n),[]),o=f.useMemo(()=>{const n=[],a=e.pathname.split(C).splice(1);for(let t=0;t<a.length;t+=1){const s=a[t],m=a[t+1],d=a.slice(0,t+1).join(C);if(!i(s)){const u={key:s,url:d,id:void 0};i(m)&&(u.id=m),n.push(u)}}return n},[e.pathname]),r=f.useCallback(n=>n<o.length-1,[o]);return c.jsx(l,{size:"large",children:$.map(o,(n,a)=>c.jsxs(c.Fragment,{children:[c.jsx(q,{active:!r(a),as:e.as,id:n.id,label:e.labels[n.key],name:n.key,onLoad:e.onLoad,url:n.url}),r(a)&&c.jsx(l.Divider,{icon:"right chevron"})]}))})};x.__docgenInfo={description:"This component can be used to render a breadcrumb for the passed URL.",methods:[],displayName:"Breadcrumbs",props:{as:{required:!1,flowType:{name:"ComponentType",elements:[{name:"any"}],raw:"ComponentType<any>"},description:"Alternate component to use to render the breadcrumb."},labels:{required:!0,flowType:{name:"signature",type:"object",raw:"{ key: string, value: string }",signature:{properties:[{key:"key",value:{name:"string",required:!0}},{key:"value",value:{name:"string",required:!0}}]}},description:"A key-value pair of types to labels to match the `pathname`."},onLoad:{required:!0,flowType:{name:"signature",type:"function",raw:"(id: number, name: string) => Promise<any>",signature:{arguments:[{name:"id",type:{name:"number"}},{name:"name",type:{name:"string"}}],return:{name:"Promise",elements:[{name:"any"}],raw:"Promise<any>"}}},description:"Callback fired to lookup the name of the passed breadcrumb item."},pathname:{required:!0,flowType:{name:"string"},description:"The URL for which to generate the breadcrumb."}}};const Q={title:"Components/Semantic UI/Breadcrumbs",component:x},v=()=>c.jsx(x,{labels:{books:"Books"},onLoad:()=>Promise.resolve("Great Expectations"),pathname:"/books/12"});v.__docgenInfo={description:"",methods:[],displayName:"Default"};v.parameters={...v.parameters,docs:{...v.parameters?.docs,source:{originalSource:`() => <Breadcrumbs labels={{
  books: 'Books'
}} onLoad={() => Promise.resolve('Great Expectations')} pathname='/books/12' />`,...v.parameters?.docs?.source}}};const V=["Default"];export{v as Default,V as __namedExportsOrder,Q as default};
