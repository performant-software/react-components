import{j as c}from"./jsx-runtime-D9TvR9R2.js";import{r as p}from"./index-C0dDX-lL.js";import{a as m}from"./chunk-WFFRPTHA-B2vgThZf.js";import{D as i}from"./DateInput-C8iigAqa.js";import"./_commonjsHelpers-BosuxZz1.js";import"./preview-errors-CzpZmerH.js";import"./index-CKJfshIT.js";import"./v4-D8aEg3BZ.js";import"./Icon-BGzIEILD.js";import"./extends-CCbyfPlC.js";import"./inheritsLoose-1HkgTRWY.js";import"./setPrototypeOf-DgZC2w_0.js";import"./getElementType-C_4y_n4F.js";import"./Input-CEHVpxQU.js";import"./includes-BAV9TYTx.js";import"./toFinite-DWd2HYc9.js";import"./map-Dr4OE-Ab.js";import"./Label-BqnFaqey.js";import"./ModernAutoControlledComponent-CBEnGjal.js";import"./assertThisInitialized-B9jnkVVz.js";import"./forEach-Bj9nU5MO.js";import"./Dimmer-kmE_IUk6.js";import"./Portal-CKYxdKwP.js";import"./keyboardKey-OMDgGVm3.js";import"./index-DOYXiIEK.js";import"./objectWithoutPropertiesLoose-1QL-frMM.js";import"./Button-Dcib8V--.js";const V={title:"Components/Semantic UI/DateInput",component:i},o=()=>{const[e,t]=p.useState(new Date);return c.jsx(i,{onChange:a=>t(a),onClick:m("click"),value:e})},r=()=>{const[e,t]=p.useState(new Date);return c.jsx(i,{locale:"de",onChange:a=>t(a),onClick:m("click"),value:e})},n=()=>{const[e,t]=p.useState(new Date);return c.jsx(i,{formatOptions:{weekday:"long",day:"numeric",month:"numeric",hour:"numeric"},locale:"fr",onChange:a=>t(a),onClick:m("click"),value:e})},s=()=>{const[e,t]=p.useState(new Date);return c.jsx(i,{display:e?`Today is ${e}`:"Cleared!",onChange:a=>t(a),onClick:m("click"),value:e})};o.__docgenInfo={description:"",methods:[],displayName:"Default"};r.__docgenInfo={description:"",methods:[],displayName:"WithLocale"};n.__docgenInfo={description:"",methods:[],displayName:"WithLocaleAndFormatOptions"};s.__docgenInfo={description:"",methods:[],displayName:"WithDisplay"};var d,l,u;o.parameters={...o.parameters,docs:{...(d=o.parameters)==null?void 0:d.docs,source:{originalSource:`() => {
  const [date, setDate] = useState(new Date());
  return <DateInput onChange={d => setDate(d)} onClick={action('click')} value={date} />;
}`,...(u=(l=o.parameters)==null?void 0:l.docs)==null?void 0:u.source}}};var D,h,C;r.parameters={...r.parameters,docs:{...(D=r.parameters)==null?void 0:D.docs,source:{originalSource:`() => {
  const [date, setDate] = useState(new Date());
  return <DateInput locale='de' onChange={d => setDate(d)} onClick={action('click')} value={date} />;
}`,...(C=(h=r.parameters)==null?void 0:h.docs)==null?void 0:C.source}}};var g,k,f;n.parameters={...n.parameters,docs:{...(g=n.parameters)==null?void 0:g.docs,source:{originalSource:`() => {
  const [date, setDate] = useState(new Date());
  return <DateInput formatOptions={{
    weekday: 'long',
    day: 'numeric',
    month: 'numeric',
    hour: 'numeric'
  }} locale='fr' onChange={d => setDate(d)} onClick={action('click')} value={date} />;
}`,...(f=(k=n.parameters)==null?void 0:k.docs)==null?void 0:f.source}}};var y,S,I;s.parameters={...s.parameters,docs:{...(y=s.parameters)==null?void 0:y.docs,source:{originalSource:"() => {\n  const [date, setDate] = useState(new Date());\n  return <DateInput display={date ? `Today is ${date}` : 'Cleared!'} onChange={d => setDate(d)} onClick={action('click')} value={date} />;\n}",...(I=(S=s.parameters)==null?void 0:S.docs)==null?void 0:I.source}}};const X=["Default","WithLocale","WithLocaleAndFormatOptions","WithDisplay"];export{o as Default,s as WithDisplay,r as WithLocale,n as WithLocaleAndFormatOptions,X as __namedExportsOrder,V as default};
