import{j as e}from"./jsx-runtime-D9TvR9R2.js";import"./index-C0dDX-lL.js";import{d as a}from"./index-Dr18q9sk.js";import{_ as h}from"./index-default-C_maRo4o.js";import{T as o}from"./TabbedModal-SUTQtpUJ.js";import"./_commonjsHelpers-BosuxZz1.js";import"./mapValues-BXr-GEgA.js";import"./pickBy-ILmh4CwI.js";import"./_commonjs-dynamic-modules-TDtrdbi3.js";import"./isPlainObject-CVmyTvcu.js";import"./index-Cw1G72V2.js";import"./index-CKJfshIT.js";import"./tiny-invariant.cjs-DxxScMW_.js";import"./___vite-browser-external_commonjs-proxy-DRaEfepn.js";import"./preview-errors-CzpZmerH.js";import"./debounce-C2QphL08.js";import"./index.es34-CmwjDoSW.js";import"./index-DOYXiIEK.js";import"./iframe-BHvLQaZ5.js";import"../sb-preview/runtime.js";import"./index.es25-xvj8T6Jl.js";import"./Menu-UzpVjXjU.js";import"./extends-CCbyfPlC.js";import"./inheritsLoose-1HkgTRWY.js";import"./setPrototypeOf-DgZC2w_0.js";import"./map-Dr4OE-Ab.js";import"./getElementType-C_4y_n4F.js";import"./ModernAutoControlledComponent-CBEnGjal.js";import"./assertThisInitialized-B9jnkVVz.js";import"./_arrayReduce-CrxnWFSq.js";import"./deburr-ClVont3z.js";import"./Icon-BGzIEILD.js";import"./Header-Bz3w9bIk.js";import"./Label-BqnFaqey.js";import"./includes-BAV9TYTx.js";import"./toFinite-DWd2HYc9.js";import"./forEach-Bj9nU5MO.js";import"./Dimmer-kmE_IUk6.js";import"./Portal-CKYxdKwP.js";import"./keyboardKey-OMDgGVm3.js";import"./objectWithoutPropertiesLoose-1QL-frMM.js";import"./Modal-B0p4Zslq.js";import"./index-C2Sldg7a.js";import"./_baseSet-N8oZ1kqS.js";import"./_baseAssignValue-oMV-Qdk1.js";import"./isEmpty-D4udnfVx.js";import"./Button-Dcib8V--.js";const pe={title:"Components/Semantic UI/TabbedModal",decorators:[a.withKnobs]},t=()=>e.jsxs(o,{header:a.text("Header","Modal Header"),inlineTabs:a.boolean("Inline tabs",!1),open:!0,children:[e.jsx(o.Tab,{name:"Tab 1",children:e.jsx("div",{children:"Tab 1 content"})}),e.jsx(o.Tab,{name:"Tab 2",children:e.jsx("div",{children:"Tab 2 content"})})]}),r=()=>{const M=a.number("Number of tabs",3);return e.jsx(o,{header:a.text("Header","Modal Header"),inlineTabs:a.boolean("Inline tabs",!1),open:!0,children:h.times(M,d=>e.jsx(o.Tab,{name:`Tab ${d}`,children:e.jsx("div",{children:`Tab ${d} content`})}))})},n=()=>e.jsxs(o,{header:a.text("Header","Modal Header"),inlineTabs:a.boolean("Inline tabs",!1),open:!0,children:[e.jsx(o.Tab,{name:a.text("Tab 1 Name","Tab 1"),children:e.jsx("div",{children:"Tab 1 content"})}),e.jsx(o.Tab,{name:a.text("Tab 2 Name","Tab 2"),children:e.jsx("div",{children:"Tab 2 content"})})]});t.__docgenInfo={description:"",methods:[],displayName:"Default"};r.__docgenInfo={description:"",methods:[],displayName:"DynamicTabs"};n.__docgenInfo={description:"",methods:[],displayName:"NamedTabs"};var i,b,s;t.parameters={...t.parameters,docs:{...(i=t.parameters)==null?void 0:i.docs,source:{originalSource:`() => <TabbedModal header={text('Header', 'Modal Header')} inlineTabs={boolean('Inline tabs', false)} open>
    <TabbedModal.Tab name='Tab 1'>
      <div>Tab 1 content</div>
    </TabbedModal.Tab>
    <TabbedModal.Tab name='Tab 2'>
      <div>Tab 2 content</div>
    </TabbedModal.Tab>
  </TabbedModal>`,...(s=(b=t.parameters)==null?void 0:b.docs)==null?void 0:s.source}}};var m,p,l;r.parameters={...r.parameters,docs:{...(m=r.parameters)==null?void 0:m.docs,source:{originalSource:`() => {
  const tabs = number('Number of tabs', 3);
  return <TabbedModal header={text('Header', 'Modal Header')} inlineTabs={boolean('Inline tabs', false)} open>
      {_.times(tabs, index => <TabbedModal.Tab name={\`Tab \${index}\`}>
          <div>{\`Tab \${index} content\`}</div>
        </TabbedModal.Tab>)}
    </TabbedModal>;
}`,...(l=(p=r.parameters)==null?void 0:p.docs)==null?void 0:l.source}}};var T,c,x;n.parameters={...n.parameters,docs:{...(T=n.parameters)==null?void 0:T.docs,source:{originalSource:`() => <TabbedModal header={text('Header', 'Modal Header')} inlineTabs={boolean('Inline tabs', false)} open>
    <TabbedModal.Tab name={text('Tab 1 Name', 'Tab 1')}>
      <div>Tab 1 content</div>
    </TabbedModal.Tab>
    <TabbedModal.Tab name={text('Tab 2 Name', 'Tab 2')}>
      <div>Tab 2 content</div>
    </TabbedModal.Tab>
  </TabbedModal>`,...(x=(c=n.parameters)==null?void 0:c.docs)==null?void 0:x.source}}};const le=["Default","DynamicTabs","NamedTabs"];export{t as Default,r as DynamicTabs,n as NamedTabs,le as __namedExportsOrder,pe as default};
