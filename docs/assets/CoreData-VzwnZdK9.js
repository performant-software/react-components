import{r as n}from"./iframe-FoyjJkLC.js";import{_ as b}from"./index-default-B8-H6N8J.js";const f=n.createContext({baseUrl:void 0,projectIds:void 0}),m=(a,e,t,s,r=[],l={})=>{const i=`${a}/core_data/public/v1/${e}/${t}/${s}`,o=new URLSearchParams(l);return b.each(r,h=>{o.append("project_ids[]",h)}),`${i}?${o}`},v=(a,e,t,s=[],r={})=>{let l=`${a}/core_data/public/v1/${e}`;t&&(l=`${l}/${t}`);const i=new URLSearchParams(r);return b.each(s,o=>{i.append("project_ids[]",o)}),`${l}?${i}`},c={buildNestedUrl:m,buildUrl:v};class p{constructor(e,t){if(this.constructor===p)throw new TypeError('Abstract class "BaseService" cannot be instantiated directly.');this.baseUrl=e,this.projectIds=t}fetchAll(e={}){const t=c.buildUrl(this.baseUrl,this.getRoute(),null,this.projectIds,e);return fetch(t).then(s=>s.json())}fetchOne(e,t={}){const s=c.buildUrl(this.baseUrl,this.getRoute(),e,this.projectIds,t);return fetch(s).then(r=>r.json())}fetchRelatedEvents(e,t={}){const s=c.buildNestedUrl(this.baseUrl,this.getRoute(),e,"events",this.projectIds,t);return fetch(s).then(r=>r.json())}fetchRelatedInstances(e,t={}){const s=c.buildNestedUrl(this.baseUrl,this.getRoute(),e,"instances",this.projectIds,t);return fetch(s).then(r=>r.json())}fetchRelatedItems(e,t={}){const s=c.buildNestedUrl(this.baseUrl,this.getRoute(),e,"items",this.projectIds,t);return fetch(s).then(r=>r.json())}fetchRelatedManifests(e,t={}){const s=c.buildNestedUrl(this.baseUrl,this.getRoute(),e,"manifests",this.projectIds,t);return fetch(s).then(r=>r.json())}fetchRelatedMedia(e,t={}){const s=c.buildNestedUrl(this.baseUrl,this.getRoute(),e,"media_contents",this.projectIds,t);return fetch(s).then(r=>r.json())}fetchRelatedOrganizations(e,t={}){const s=c.buildNestedUrl(this.baseUrl,this.getRoute(),e,"organizations",this.projectIds,t);return fetch(s).then(r=>r.json())}fetchRelatedPeople(e,t={}){const s=c.buildNestedUrl(this.baseUrl,this.getRoute(),e,"people",this.projectIds,t);return fetch(s).then(r=>r.json())}fetchRelatedPlaces(e,t={}){const s=c.buildNestedUrl(this.baseUrl,this.getRoute(),e,"places",this.projectIds,t);return fetch(s).then(r=>r.json())}fetchRelatedTaxonomies(e,t={}){const s=c.buildNestedUrl(this.baseUrl,this.getRoute(),e,"taxonomies",this.projectIds,t);return fetch(s).then(r=>r.json())}fetchRelatedWorks(e,t={}){const s=c.buildNestedUrl(this.baseUrl,this.getRoute(),e,"works",this.projectIds,t);return fetch(s).then(r=>r.json())}getRoute(){}}class N extends p{getRoute(){return"events"}}class x extends p{getRoute(){return"places"}}const $=1,E=(a,e={},t=[])=>{const[s,r]=n.useState(),[l,i]=n.useState(!1),[o,h]=n.useState($),d=n.useMemo(()=>s?.list||{},[s]),U=n.useMemo(()=>o===d.pages,[o,d.pages]),j=n.useMemo(()=>o===1,[o]),g=n.useCallback(()=>h(u=>u+1),[]),R=n.useCallback(u=>h(u),[]),I=n.useCallback(()=>h(u=>u-1),[]);return n.useEffect(()=>{i(!0),a({...e,page:o}).then(u=>r(u)).finally(()=>i(!1))},[...t,o]),{count:d.count,data:s,isNextDisabled:U,isPreviousDisabled:j,loading:l,onNext:g,onPageChange:R,onPrevious:I,page:o,pages:d.pages}},S=()=>{const{baseUrl:a,projectIds:e}=n.useContext(f);return new N(a,e)},w=()=>{const{baseUrl:a,projectIds:e}=n.useContext(f);return new x(a,e)};export{f as C,E as a,w as b,S as u};
