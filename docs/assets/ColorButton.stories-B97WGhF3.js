import{j as d}from"./jsx-runtime-BTCK_S7S.js";import"./index-CBqU2yxZ.js";import{a as l}from"./chunk-WFFRPTHA-B2vgThZf.js";import{d as e}from"./index-kF-6VCSF.js";import{B as a}from"./Button-Blq7Z6RX.js";import"./_commonjsHelpers-BosuxZz1.js";import"./preview-errors-CzpZmerH.js";import"./index-CKJfshIT.js";import"./v4-D8aEg3BZ.js";import"./mapValues-CZh2vnSw.js";import"./pickBy-CU2rOOKe.js";import"./_commonjs-dynamic-modules-TDtrdbi3.js";import"./isPlainObject-Bu_b4Pek.js";import"./index-Cw1G72V2.js";import"./tiny-invariant.cjs-DxxScMW_.js";import"./___vite-browser-external_commonjs-proxy-DRaEfepn.js";import"./debounce-Bq1aTuh-.js";import"./extends-CCbyfPlC.js";import"./inheritsLoose-1HkgTRWY.js";import"./setPrototypeOf-DgZC2w_0.js";import"./getElementType-CckcRzoH.js";import"./Icon-2tEtgK8g.js";import"./Label-Cq1fb1cd.js";import"./ModernAutoControlledComponent-DJBWk5EW.js";import"./assertThisInitialized-B9jnkVVz.js";import"./includes-CQoJOerW.js";import"./toFinite-KQ8KevIC.js";import"./forEach-CXlln0XP.js";import"./Dimmer-D_gwaesu.js";import"./Portal-DvhHJPzU.js";import"./keyboardKey-OMDgGVm3.js";import"./index-DZGZymok.js";import"./objectWithoutPropertiesLoose-1QL-frMM.js";import"./map-B4PnIEPz.js";const r=o=>d.jsx(a,{className:"color-button",onClick:o.onClick&&o.onClick.bind(void 0),style:{backgroundColor:o.color,cursor:o.onClick?"pointer":"default",height:o.height,width:o.width},title:"color-button"});r.defaultProps={height:void 0,onClick:void 0,width:void 0};r.__docgenInfo={description:"",methods:[],displayName:"ColorButton",props:{color:{required:!0,flowType:{name:"string"},description:""},height:{required:!1,flowType:{name:"number"},description:"",defaultValue:{value:"undefined",computed:!0}},onClick:{required:!1,flowType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"",defaultValue:{value:"undefined",computed:!0}},width:{required:!1,flowType:{name:"number"},description:"",defaultValue:{value:"undefined",computed:!0}}}};const F={title:"Components/Semantic UI/ColorButton",decorators:[e.withKnobs]},t=()=>d.jsx(r,{color:e.color("Color","#e5e5e5e5"),height:e.number("Height",50),onClick:l("click"),width:e.number("Width",50)});t.__docgenInfo={description:"",methods:[],displayName:"Default"};var i,m,n;t.parameters={...t.parameters,docs:{...(i=t.parameters)==null?void 0:i.docs,source:{originalSource:"() => <ColorButton color={color('Color', '#e5e5e5e5')} height={number('Height', 50)} onClick={action('click')} width={number('Width', 50)} />",...(n=(m=t.parameters)==null?void 0:m.docs)==null?void 0:n.source}}};const G=["Default"];export{t as Default,G as __namedExportsOrder,F as default};
