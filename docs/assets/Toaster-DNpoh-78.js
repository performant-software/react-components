import{r as n,j as a}from"./iframe-D2tDQHIu.js";import{M as l}from"./Message-C8FEkoL7.js";import{T as d}from"./Transition-C6XMim_5.js";import{_ as o}from"./index-default-C0I3bBxV.js";const r=700,t=e=>{const[s,i]=n.useState(!0);return e.timeout&&e.timeout>0&&o.delay(()=>{i(!1)},e.timeout),n.useEffect(()=>{!s&&e.onDismiss&&o.delay(e.onDismiss.bind(void 0),r)},[s]),a.jsx(d,{animation:"slide down",duration:r,transitionOnMount:!0,visible:s,children:a.jsx(l,{className:"toaster",info:e.type===t.MessageTypes.info,negative:e.type===t.MessageTypes.negative,onDismiss:()=>i(!1),positive:e.type===t.MessageTypes.positive,warning:e.type===t.MessageTypes.warning,children:e.children})})};t.MessageTypes={info:"info",negative:"negative",positive:"positive",warning:"warning"};t.defaultProps={onDismiss:void 0,timeout:3e3,type:t.MessageTypes.info};t.__docgenInfo={description:`This is a simple messaging pane that drops from the top of
the page and displays that child elements`,methods:[],displayName:"Toaster",props:{children:{required:!0,flowType:{name:"Array",elements:[{name:"Element",elements:[{name:"any"}],raw:"Element<any>"}],raw:"Array<Element<any>>"},description:`A child element that will be displayed in the toaster pane.
It can be a simple as a Text string or any child component.`},onDismiss:{required:!1,flowType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"An optional function to be called when the toaster pane closes.",defaultValue:{value:"undefined",computed:!0}},timeout:{required:!1,flowType:{name:"number"},description:`Time in milliseconds that the toaster should be displayed to the
user.`,defaultValue:{value:"3000",computed:!1}},type:{required:!1,flowType:{name:"string"},description:`The type of Toaster that should be displayed. The Toaster component supports:
 * "info" - A yellow Toaster pane used to display useful but non-critical information
 * "positive" - A green toaster pane. This should be used for postive user feedback
 * "negative" - A red toaster pane. This should be used for negative user feedback and errors
 * "warning"`,defaultValue:{value:"Toaster.MessageTypes.info",computed:!0}}}};export{t as T};
