import{j as i,r as l}from"./iframe-D2tDQHIu.js";import{R as t}from"./ReferenceCodeDropdown-BA0BQgTl.js";import"./Dropdown-29n6mrng.js";import"./extends-CCbyfPlC.js";import"./inheritsLoose-1HkgTRWY.js";import"./setPrototypeOf-DgZC2w_0.js";import"./includes-ComNSsGh.js";import"./getElementType-TLbMidFA.js";import"./toFinite-Ch3-mxAi.js";import"./map-q00LD5yS.js";import"./without-CqD5ld8v.js";import"./isArrayLikeObject-GAfAHYyv.js";import"./isEmpty-4KKn6hcF.js";import"./deburr-ChK6Lkvo.js";import"./index-D8tE4-9w.js";import"./_baseSet-KiE310VO.js";import"./_baseAssignValue-CihLrf3R.js";import"./_arrayReduce-CrxnWFSq.js";import"./ModernAutoControlledComponent-CIi-16Zs.js";import"./assertThisInitialized-B9jnkVVz.js";import"./Portal-BF3g11_x.js";import"./keyboardKey-UPAJnvsN.js";import"./Icon-BSWzGvLf.js";import"./Label-CmMRyCgB.js";import"./forEach-xROvcHNC.js";import"./Dimmer-Wnz_k9oJ.js";import"./filter-DnFvB4UZ.js";import"./index.es27-BqzRcxM3.js";import"./index.es15-BOYkuYTA.js";const{action:c}=__STORYBOOK_MODULE_ACTIONS__,K={title:"Components/Controlled Vocabulary/ReferenceCodeDropdown",component:t},e=()=>i.jsx(t,{fluid:!0,label:"Locations",required:!0,onChange:c("change"),referenceTable:"locations",value:""}),r=()=>{const[a,n]=l.useState([]);return i.jsx(t,{fluid:!0,label:"Locations",multiple:!0,required:!0,onChange:s=>n(s),referenceTable:"locations",value:a})},o=()=>{const[a,n]=l.useState([{reference_code_id:1},{reference_code_id:2}]);return i.jsx(t,{fluid:!0,label:"Locations",multiple:!0,required:!0,onChange:s=>n(s),referenceTable:"locations",value:a})};e.__docgenInfo={description:"",methods:[],displayName:"Default"};r.__docgenInfo={description:"",methods:[],displayName:"Multiple"};o.__docgenInfo={description:"",methods:[],displayName:"ExistingValues"};e.parameters={...e.parameters,docs:{...e.parameters?.docs,source:{originalSource:"() => <ReferenceCodeDropdown fluid label='Locations' required onChange={action('change')} referenceTable='locations' value='' />",...e.parameters?.docs?.source}}};r.parameters={...r.parameters,docs:{...r.parameters?.docs,source:{originalSource:`() => {
  const [value, setValue] = useState([]);
  return <ReferenceCodeDropdown fluid label='Locations' multiple required onChange={selected => setValue(selected)} referenceTable='locations' value={value} />;
}`,...r.parameters?.docs?.source}}};o.parameters={...o.parameters,docs:{...o.parameters?.docs,source:{originalSource:`() => {
  const [value, setValue] = useState([{
    reference_code_id: 1
  }, {
    reference_code_id: 2
  }]);
  return <ReferenceCodeDropdown fluid label='Locations' multiple required onChange={selected => setValue(selected)} referenceTable='locations' value={value} />;
}`,...o.parameters?.docs?.source}}};const U=["Default","Multiple","ExistingValues"];export{e as Default,o as ExistingValues,r as Multiple,U as __namedExportsOrder,K as default};
