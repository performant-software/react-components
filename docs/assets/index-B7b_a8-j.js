var t=63710088e-1,s={centimeters:t*100,centimetres:t*100,degrees:t/111325,feet:t*3.28084,inches:t*39.37,kilometers:t/1e3,kilometres:t/1e3,meters:t,metres:t,miles:t/1609.344,millimeters:t*1e3,millimetres:t*1e3,nauticalmiles:t/1852,radians:1,yards:t*1.0936};function u(a,e,r){r===void 0&&(r={});var i={type:"Feature"};return(r.id===0||r.id)&&(i.id=r.id),r.bbox&&(i.bbox=r.bbox),i.properties=e||{},i.geometry=a,i}function v(a,e,r){if(r===void 0&&(r={}),!a)throw new Error("coordinates is required");if(!Array.isArray(a))throw new Error("coordinates must be an Array");if(a.length<2)throw new Error("coordinates must be at least 2 numbers long");if(!l(a[0])||!l(a[1]))throw new Error("coordinates must contain numbers");var i={type:"Point",coordinates:a};return u(i,e,r)}function d(a,e,r){r===void 0&&(r={});for(var i=0,o=a;i<o.length;i++){var f=o[i];if(f.length<4)throw new Error("Each LinearRing of a Polygon must have 4 or more Positions.");for(var n=0;n<f[f.length-1].length;n++)if(f[f.length-1][n]!==f[0][n])throw new Error("First and last Position are not equivalent.")}var m={type:"Polygon",coordinates:a};return u(m,e,r)}function h(a,e){e===void 0&&(e={});var r={type:"FeatureCollection"};return e.id&&(r.id=e.id),e.bbox&&(r.bbox=e.bbox),r.features=a,r}function b(a,e){e===void 0&&(e="kilometers");var r=s[e];if(!r)throw new Error(e+" units is invalid");return a*r}function c(a,e){e===void 0&&(e="kilometers");var r=s[e];if(!r)throw new Error(e+" units is invalid");return a/r}function l(a){return!isNaN(a)&&a!==null&&!Array.isArray(a)}export{v as a,h as b,t as e,u as f,c as l,d as p,b as r};
