import{j as d}from"./jsx-runtime-D9TvR9R2.js";import"./index-C0dDX-lL.js";import{R as o}from"./RelatedMedia-xQUkrtRm.js";import{b as u}from"./CoreData-37WkoVSV.js";import{w as c}from"./CoreDataContextProvider-Btcnl27g.js";import"./_commonjsHelpers-BosuxZz1.js";import"./index-CbkgbXGQ.js";import"./index-DOYXiIEK.js";import"./extends-CCbyfPlC.js";import"./index-BbtE80dZ.js";import"./index-B8cpGa5N.js";import"./___vite-browser-external_commonjs-proxy-DRaEfepn.js";import"./floating-ui.react-dom-BUm7GwT3.js";import"./index-DE75wVnf.js";import"./v4-D8aEg3BZ.js";import"./index-default-C_maRo4o.js";import"./MediaGallery-IhHCWlNR.js";import"./i18n-DBs6I0Fj.js";import"./i18next-CwS9wMM1.js";import"./toPropertyKey-BcUJYDQU.js";import"./defineProperty-DcNpp85p.js";import"./inherits-CWPG5jll.js";import"./assertThisInitialized-B9jnkVVz.js";import"./setPrototypeOf-DgZC2w_0.js";import"./createClass-CV9nCQMI.js";import"./getPrototypeOf-BYVhAdwF.js";import"./Modal-b75ysbSI.js";import"./index.es33-OhY7yfgF.js";import"./iframe-C2Z9xHRY.js";import"../sb-preview/runtime.js";import"./index-DGlwu9Uw.js";import"./index-I9l-Zwik.js";import"./component-BP0ixNUT.js";import"./clsx-B-dksMZM.js";import"./createLucideIcon-Cly0WHBx.js";import"./RelatedList-CXViI6JL.js";import"./LoadAnimation-b0qjd8WL.js";const Y={title:"Components/Core Data/RelatedMedia",component:o},e=c(()=>{const n=u();return d.jsx(o,{onLoad:l=>n.fetchRelatedManifests("1",l)})}),t=c(()=>d.jsx(o,{emptyMessage:"No related media",onLoad:()=>Promise.resolve()}));e.__docgenInfo={description:"",methods:[],displayName:"Default"};t.__docgenInfo={description:"",methods:[],displayName:"EmptyList"};var r,i,a;e.parameters={...e.parameters,docs:{...(r=e.parameters)==null?void 0:r.docs,source:{originalSource:`withCoreDataContextProvider(() => {
  const PlacesService = usePlacesService();
  return <RelatedMedia onLoad={params => PlacesService.fetchRelatedManifests('1', params)} />;
})`,...(a=(i=e.parameters)==null?void 0:i.docs)==null?void 0:a.source}}};var m,s,p;t.parameters={...t.parameters,docs:{...(m=t.parameters)==null?void 0:m.docs,source:{originalSource:"withCoreDataContextProvider(() => <RelatedMedia emptyMessage='No related media' onLoad={() => Promise.resolve()} />)",...(p=(s=t.parameters)==null?void 0:s.docs)==null?void 0:p.source}}};const Z=["Default","EmptyList"];export{e as Default,t as EmptyList,Z as __namedExportsOrder,Y as default};
