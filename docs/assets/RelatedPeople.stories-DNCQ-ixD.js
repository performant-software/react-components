import{j as r}from"./jsx-runtime-D9TvR9R2.js";import"./index-C0dDX-lL.js";import{_ as j}from"./index-default-C_maRo4o.js";import{R as a}from"./RelatedPeople-jM_nJjqZ.js";import{b as d}from"./CoreData-37WkoVSV.js";import{w as m}from"./CoreDataContextProvider-Btcnl27g.js";import"./_commonjsHelpers-BosuxZz1.js";import"./RelatedList-CXViI6JL.js";import"./clsx-B-dksMZM.js";import"./LoadAnimation-b0qjd8WL.js";import"./createLucideIcon-Cly0WHBx.js";const q={title:"Components/Core Data/RelatedPeople",component:a},t=m(()=>{const o=d();return r.jsx(a,{onLoad:e=>o.fetchRelatedPeople("1",e)})}),s=m(()=>{const o=d();return r.jsx(a,{onLoad:e=>o.fetchRelatedPeople("1",e),renderItem:e=>r.jsx("p",{children:`My name is ${e.first_name} ${e.middle_name}           ${e.last_name} but you can just call me ${e.first_name}`})})}),n=m(()=>{const o=d();return r.jsx(a,{itemsPerRow:2,onLoad:e=>o.fetchRelatedPeople("1",e)})}),c=m(()=>r.jsx(a,{emptyMessage:"No related people",onLoad:()=>Promise.resolve()})),i=m(()=>{const o=d();return r.jsx(a,{onLoad:e=>o.fetchRelatedPeople("1",e).then(l=>(j.extend(l.list,{pages:5,count:22}),l)),showMoreLabel:"Load More"})});t.__docgenInfo={description:"",methods:[],displayName:"Default"};s.__docgenInfo={description:"",methods:[],displayName:"CustomRender"};n.__docgenInfo={description:"",methods:[],displayName:"Horizontal"};c.__docgenInfo={description:"",methods:[],displayName:"EmptyList"};i.__docgenInfo={description:"",methods:[],displayName:"Pagination"};var p,u,P;t.parameters={...t.parameters,docs:{...(p=t.parameters)==null?void 0:p.docs,source:{originalSource:`withCoreDataContextProvider(() => {
  const PlacesService = usePlacesService();
  return <RelatedPeople onLoad={params => PlacesService.fetchRelatedPeople('1', params)} />;
})`,...(P=(u=t.parameters)==null?void 0:u.docs)==null?void 0:P.source}}};var f,v,h;s.parameters={...s.parameters,docs:{...(f=s.parameters)==null?void 0:f.docs,source:{originalSource:"withCoreDataContextProvider(() => {\n  const PlacesService = usePlacesService();\n  return <RelatedPeople onLoad={params => PlacesService.fetchRelatedPeople('1', params)} renderItem={item => <p>\n          {`My name is ${item.first_name} ${item.middle_name}\\\n           ${item.last_name} but you can just call me ${item.first_name}`}\n        </p>} />;\n})",...(h=(v=s.parameters)==null?void 0:v.docs)==null?void 0:h.source}}};var R,_,S;n.parameters={...n.parameters,docs:{...(R=n.parameters)==null?void 0:R.docs,source:{originalSource:`withCoreDataContextProvider(() => {
  const PlacesService = usePlacesService();
  return <RelatedPeople itemsPerRow={2} onLoad={params => PlacesService.fetchRelatedPeople('1', params)} />;
})`,...(S=(_=n.parameters)==null?void 0:_.docs)==null?void 0:S.source}}};var x,g,C;c.parameters={...c.parameters,docs:{...(x=c.parameters)==null?void 0:x.docs,source:{originalSource:"withCoreDataContextProvider(() => <RelatedPeople emptyMessage='No related people' onLoad={() => Promise.resolve()} />)",...(C=(g=c.parameters)==null?void 0:g.docs)==null?void 0:C.source}}};var L,y,w;i.parameters={...i.parameters,docs:{...(L=i.parameters)==null?void 0:L.docs,source:{originalSource:`withCoreDataContextProvider(() => {
  const PlacesService = usePlacesService();
  return <RelatedPeople onLoad={params => PlacesService.fetchRelatedPeople('1', params).then(response => {
    _.extend(response.list, {
      pages: 5,
      count: 22
    });
    return response;
  })} showMoreLabel='Load More' />;
})`,...(w=(y=i.parameters)==null?void 0:y.docs)==null?void 0:w.source}}};const A=["Default","CustomRender","Horizontal","EmptyList","Pagination"];export{s as CustomRender,t as Default,c as EmptyList,n as Horizontal,i as Pagination,A as __namedExportsOrder,q as default};
