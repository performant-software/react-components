import{j as s}from"./jsx-runtime-BTCK_S7S.js";import{r as n}from"./index-CBqU2yxZ.js";import{d as P}from"./index-CrUoDUGy.js";import{C as p}from"./Card-BJT3uTAq.js";import{_ as R}from"./index-default-C_maRo4o.js";import{i as B}from"./Cars-2_9qFJX9.js";import{u as C}from"./DragDrop-ryAVAQMJ.js";import"./_commonjsHelpers-BosuxZz1.js";import"./mapValues-BXr-GEgA.js";import"./pickBy-ILmh4CwI.js";import"./_commonjs-dynamic-modules-TDtrdbi3.js";import"./isPlainObject-CVmyTvcu.js";import"./index-Cw1G72V2.js";import"./index-CKJfshIT.js";import"./tiny-invariant.cjs-DxxScMW_.js";import"./___vite-browser-external_commonjs-proxy-DRaEfepn.js";import"./preview-errors-CzpZmerH.js";import"./debounce-C2QphL08.js";import"./extends-CCbyfPlC.js";import"./inheritsLoose-1HkgTRWY.js";import"./setPrototypeOf-DgZC2w_0.js";import"./getElementType-CckcRzoH.js";import"./Label-Cq1fb1cd.js";import"./ModernAutoControlledComponent-DJBWk5EW.js";import"./assertThisInitialized-B9jnkVVz.js";import"./Icon-2tEtgK8g.js";import"./includes-CQoJOerW.js";import"./toFinite-KQ8KevIC.js";import"./forEach-CXlln0XP.js";import"./Dimmer-D_gwaesu.js";import"./Portal-DvhHJPzU.js";import"./keyboardKey-OMDgGVm3.js";import"./index-DZGZymok.js";import"./objectWithoutPropertiesLoose-1QL-frMM.js";import"./map-B4PnIEPz.js";import"./DndContext-B-2NJP7Z.js";import"./redux-C8f_Y06i.js";import"./objectSpread2-N4c0DWqo.js";import"./defineProperty-CCxoMnQV.js";import"./toPropertyKey-hKuLU48H.js";const j=()=>typeof window<"u",x={isBrowser:j},u=t=>{const[o,i]=n.useState(0),m=n.useRef(),r=()=>{let e;return t.context?e=t.context.current:x.isBrowser()&&(e=document.documentElement),e},a=()=>{const e=r();if(e){const{scrollTop:l,clientHeight:g,scrollHeight:h}=e;l+g>=h-t.offset&&t.onBottomReached()}};n.useEffect(()=>{let e;if(t.context?e=t.context.current:x.isBrowser()&&(e=window),!!e)return e.addEventListener("scroll",a),()=>e&&e.removeEventListener("scroll",a)},[t.context]);const f=()=>{let e=!1;const l=r();if(l){const{clientHeight:g,scrollHeight:h}=l;e=h>g}return e};return n.useEffect(()=>{if(!f()&&m&&m.current){const{clientHeight:e}=m.current;e>o&&(i(e),t.onBottomReached())}}),s.jsx("div",{ref:m,children:t.children})};u.defaultProps={offset:0};u.__docgenInfo={description:"",methods:[],displayName:"InfiniteScroll",props:{children:{required:!0,flowType:{name:"Element",elements:[{name:"any"}],raw:"Element<any>"},description:""},context:{required:!1,flowType:{name:"signature",type:"object",raw:"{ current: HTMLElement }",signature:{properties:[{key:"current",value:{name:"HTMLElement",required:!0}}]}},description:""},offset:{required:!1,flowType:{name:"number"},description:"",defaultValue:{value:"0",computed:!1}},onBottomReached:{required:!0,flowType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:""}}};const he={title:"Components/Common/InfiniteScroll",decorators:[P.withKnobs]},E=10,c=C(()=>{const[t,o]=n.useState([]),[i,m]=n.useState(1);return n.useEffect(()=>{const r=(i-1)*E,a=r+E;o(f=>[...f,...B.slice(r,a)])},[i]),s.jsx(u,{offset:100,onBottomReached:()=>m(r=>r+1),children:s.jsx(p.Group,{children:R.map(t,(r,a)=>s.jsx(p,{header:r.make,meta:r.model,description:r.address},a))})})}),d=C(()=>{const t=[];return s.jsx(u,{offset:100,onBottomReached:()=>{},children:s.jsx(p.Group,{children:R.map(t,(o,i)=>s.jsx(p,{header:o.make,meta:o.model,description:o.address},i))})})});c.__docgenInfo={description:"",methods:[],displayName:"Default"};d.__docgenInfo={description:"",methods:[],displayName:"EmptyList"};var I,y,S;c.parameters={...c.parameters,docs:{...(I=c.parameters)==null?void 0:I.docs,source:{originalSource:`useDragDrop(() => {
  const [items, setItems] = useState([]);
  const [page, setPage] = useState(1);
  useEffect(() => {
    const startIndex = (page - 1) * PER_PAGE;
    const endIndex = startIndex + PER_PAGE;
    setItems(prevItems => [...prevItems, ...Cars.slice(startIndex, endIndex)]);
  }, [page]);
  return <InfiniteScroll offset={100} onBottomReached={() => setPage(prevPage => prevPage + 1)}>
      <Card.Group>
        {_.map(items, (item, index) => <Card key={index} header={item.make} meta={item.model} description={item.address} />)}
      </Card.Group>
    </InfiniteScroll>;
})`,...(S=(y=c.parameters)==null?void 0:y.docs)==null?void 0:S.source}}};var w,_,v;d.parameters={...d.parameters,docs:{...(w=d.parameters)==null?void 0:w.docs,source:{originalSource:`useDragDrop(() => {
  const items = [];
  return <InfiniteScroll offset={100} onBottomReached={() => {}}>
      <Card.Group>
        {_.map(items, (item, index) => <Card key={index} header={item.make} meta={item.model} description={item.address} />)}
      </Card.Group>
    </InfiniteScroll>;
})`,...(v=(_=d.parameters)==null?void 0:_.docs)==null?void 0:v.source}}};const xe=["Default","EmptyList"];export{c as Default,d as EmptyList,xe as __namedExportsOrder,he as default};
