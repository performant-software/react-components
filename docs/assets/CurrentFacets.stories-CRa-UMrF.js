import{r as p,j as t}from"./iframe-isOIMYbo.js";import{_ as n}from"./index-default-C0I3bBxV.js";import{C as R}from"./CurrentFacetLabels-Ndsq_zhJ.js";import{C as _}from"./CurrentFacetsModal-CG_VmiTv.js";import"./Button-CqXa-wVP.js";import"./extends-CCbyfPlC.js";import"./inheritsLoose-1HkgTRWY.js";import"./setPrototypeOf-DgZC2w_0.js";import"./getElementType-CsHk5kPH.js";import"./Icon-DBxUlxMw.js";import"./Label-vg6cGd_Q.js";import"./ModernAutoControlledComponent-BtLuXh9U.js";import"./assertThisInitialized-B9jnkVVz.js";import"./includes-CdyQs4Ym.js";import"./toFinite-DGZNaitu.js";import"./forEach-MpIg6X8D.js";import"./Dimmer-DT1p3J3k.js";import"./Portal-Cx1eItx_.js";import"./keyboardKey-B58FVVIx.js";import"./map-YoLMybS-.js";import"./Modal-BXLzsD-x.js";import"./index-CfsjdyXR.js";import"./_baseSet-XjsS9Dyu.js";import"./_baseAssignValue-CF-CCvL5.js";import"./_arrayReduce-CrxnWFSq.js";import"./isEmpty-UXTvYtPv.js";import"./index-DWrsd_AA.js";import"./i18n-DkobdbHY.js";import"./i18next-eNuDfwAU.js";const o=({useCurrentRefinements:s,...m})=>{const[y,f]=p.useState(!1),{items:d}=s(m),r=p.useMemo(()=>n.flatten(n.map(d,c=>n.map(c.refinements,l=>({label:`${c.label}: ${l.label}`,onClick:()=>c.refine(l)})))),[d]),C=p.useMemo(()=>n.filter(r,(c,l)=>!m.limit||l<m.limit),[r,m.limit]);return n.isEmpty(r)?null:t.jsxs(t.Fragment,{children:[t.jsx(R,{count:r.length,items:C,onShowMore:()=>f(!0)}),t.jsx(_,{items:r,open:y,onClose:()=>f(!1)})]})};o.defaultProps={limit:void 0};o.__docgenInfo={description:"This component can be used to display the facets/refinements currently applied to an InstantSearch index.",methods:[],displayName:"CurrentFacets",props:{useCurrentRefinements:{required:!0,flowType:{name:"signature",type:"function",raw:"(props: any) => ({ items: Array<any> })",signature:{arguments:[{name:"props",type:{name:"any"}}],return:{name:"signature",type:"object",raw:"{ items: Array<any> }",signature:{properties:[{key:"items",value:{name:"Array",elements:[{name:"any"}],raw:"Array<any>",required:!0}}]}}}},description:"Instant-Search hook to provide current refinements values."},limit:{required:!1,flowType:{name:"number"},description:"The maximum number of facets to display. If more facets are added, they will be accessible via modal.",defaultValue:{value:"undefined",computed:!0}}}};const{action:u}=__STORYBOOK_MODULE_ACTIONS__,H={title:"Components/Semantic UI/CurrentFacets",component:o},e=s=>({label:s,onClick:u(`click ${s}`)}),i=()=>t.jsx(o,{useCurrentRefinements:()=>({items:[{label:"Color",refine:u("refine"),refinements:[e("Red"),e("Blue"),e("Green")]}]})}),a=()=>t.jsx(o,{limit:3,useCurrentRefinements:()=>({items:[{label:"Color",refine:u("refine"),refinements:[e("Red"),e("Blue"),e("Green"),e("Purple"),e("Orange"),e("Yellow")]}]})});i.__docgenInfo={description:"",methods:[],displayName:"Default"};a.__docgenInfo={description:"",methods:[],displayName:"Limit"};i.parameters={...i.parameters,docs:{...i.parameters?.docs,source:{originalSource:`() => <CurrentFacets useCurrentRefinements={() => ({
  items: [{
    label: 'Color',
    refine: action('refine'),
    refinements: [createRefinement('Red'), createRefinement('Blue'), createRefinement('Green')]
  }]
})} />`,...i.parameters?.docs?.source}}};a.parameters={...a.parameters,docs:{...a.parameters?.docs,source:{originalSource:`() => <CurrentFacets limit={3} useCurrentRefinements={() => ({
  items: [{
    label: 'Color',
    refine: action('refine'),
    refinements: [createRefinement('Red'), createRefinement('Blue'), createRefinement('Green'), createRefinement('Purple'), createRefinement('Orange'), createRefinement('Yellow')]
  }]
})} />`,...a.parameters?.docs?.source}}};const J=["Default","Limit"];export{i as Default,a as Limit,J as __namedExportsOrder,H as default};
